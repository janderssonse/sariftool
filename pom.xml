<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd">
  <modelVersion>4.0.0</modelVersion>

  <groupId>se.janderssonse</groupId>
  <artifactId>sariftool</artifactId>
  <version>0.0.1-SNAPSHOT</version>

  <inceptionYear>2022</inceptionYear>
  <description>CLI tool for converting SARIF files to sonar. Might be more in the future.</description>
  <url>https://github.com/janderssonse/sariftool</url>

  <licenses>
    <license>
      <name>Apache-2.0</name>
      <url>https://spdx.org/licenses/Apache-2.0.html</url>
      <distribution>repo</distribution>
    </license>
  </licenses>

  <developers>
    <developer>
      <id>janderssonse</id>
      <name>Josef Andersson</name>
    </developer>
  </developers>

  <properties>
    <maven.compiler.source>11</maven.compiler.source>
    <maven.compiler.target>11</maven.compiler.target>
    <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
    <project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>
    <picocli.version>4.6.3</picocli.version>
    <immutables.version>2.9.1</immutables.version>
    <!-- distribution settings -->
    <executable-suffix />
    <distribution.directory>${project.build.directory}/distributions</distribution.directory>
  </properties>

  <scm>
    <developerConnection>scm:git:https://github.com/janderssonse/sariftool.git</developerConnection>
  </scm>

  <build>
    <extensions>
      <extension>
        <!-- os identifier plugin extension-->
        <groupId>kr.motd.maven</groupId>
        <artifactId>os-maven-plugin</artifactId>
        <version>1.7.0</version>
      </extension>
    </extensions>
    <plugins>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-compiler-plugin</artifactId>
        <version>3.10.1</version>
        <configuration>
          <source>${maven.compiler.source}</source>
          <target>${maven.compiler.target}</target>
          <annotationProcessorPaths>
            <dependency>
              <groupId>org.immutables</groupId>
              <artifactId>value</artifactId>
              <version>${immutables.version}</version>
            </dependency>
            <dependency>
              <groupId>info.picocli</groupId>
              <artifactId>picocli-codegen</artifactId>
              <version>${picocli.version}</version>
            </dependency>
          </annotationProcessorPaths>
          <compilerArgs>
            <arg>-Aproject=${project.groupId}/${project.artifactId}</arg>
          </compilerArgs>
        </configuration>
      </plugin>
      <!-- release plugin -->
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-release-plugin</artifactId>
        <version>3.0.0-M6</version>
        <configuration>
          <tagNameFormat>v@{project.version}</tagNameFormat>
        </configuration>
      </plugin>
      <plugin>
        <groupId>org.jreleaser</groupId>
        <artifactId>jreleaser-maven-plugin</artifactId>
        <version>1.2.0</version>
      </plugin>
      <!-- jacoco -->
      <plugin>
        <groupId>org.jacoco</groupId>
        <artifactId>jacoco-maven-plugin</artifactId>
        <version>0.8.8</version>
        <executions>
          <execution>
            <id>pre-test</id>
            <goals>
              <goal>prepare-agent</goal>
            </goals>
            <configuration>
              <propertyName>jacocoArgLine</propertyName>
              <destFile>${project.build.directory}/jacoco/jacoco.exec</destFile>
            </configuration>
          </execution>
          <execution>
            <id>post-test</id>
            <phase>test</phase>
            <goals>
              <goal>report</goal>
            </goals>
            <configuration>
              <dataFile>${project.build.directory}/jacoco/jacoco.exec</dataFile>
              <outputDirectory>${project.build.directory}/jacoco</outputDirectory>
            </configuration>
          </execution>
        </executions>
      </plugin>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-surefire-plugin</artifactId>
        <version>3.0.0-M7</version>
        <configuration>
          <argLine>${jacocoArgLine}</argLine>
          <reportsDirectory>${project.build.directory}/surefire</reportsDirectory>
        </configuration>
      </plugin>
    </plugins>
  </build>

  <dependencies>


    <dependency>
      <groupId>io.vertx</groupId>
      <artifactId>vertx-json-schema</artifactId>
      <version>4.3.3</version>
    </dependency>
    <dependency>
      <groupId>de.dm.infrastructure</groupId>
      <artifactId>log-capture</artifactId>
      <version>3.5.0</version>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.apache.commons</groupId>
      <artifactId>commons-lang3</artifactId>
      <version>3.12.0</version>
    </dependency>
    <dependency>
      <groupId>com.google.code.gson</groupId>
      <artifactId>gson</artifactId>
      <version>2.9.1</version>
    </dependency>
    <dependency>
      <groupId>org.immutables</groupId>
      <artifactId>value</artifactId>
      <version>${immutables.version}</version>
    </dependency>
    <dependency>
      <groupId>org.immutables</groupId>
      <artifactId>gson</artifactId>
      <version>${immutables.version}</version>
      <!-- If you don't need runtime capabilities - make it compile-only
        <scope>provided</scope>-->
    </dependency>
    <dependency>
      <groupId>info.picocli</groupId>
      <artifactId>picocli</artifactId>
      <version>${picocli.version}</version>
    </dependency>
    <!-- <dependency>
      <groupId>info.picocli</groupId>
      <artifactId>picocli-codegen</artifactId>
      <version>${picocli.version}</version>
    </dependency>-->
    <!-- Test dependencies -->
    <dependency>
      <groupId>org.junit.jupiter</groupId>
      <artifactId>junit-jupiter-engine</artifactId>
      <version>5.8.2</version>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.mockito</groupId>
      <artifactId>mockito-core</artifactId>
      <version>4.6.1</version>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.mockito</groupId>
      <artifactId>mockito-junit-jupiter</artifactId>
      <version>4.6.1</version>
      <scope>test</scope>
    </dependency>
  </dependencies>

  <!-- Dear maven, in future major versions, please allow for setting profiles in seperate files and include them in a pom with reference -->
  <!-- Here we go with the profiles -->
  <!-- Native image profile -->
  <profiles>
    <profile>
      <id>native</id>
      <activation>
        <property>
          <name>native</name>
        </property>
      </activation>
      <build>
        <plugins>
          <plugin>
            <groupId>org.graalvm.buildtools</groupId>
            <artifactId>native-maven-plugin</artifactId>
            <extensions>true</extensions>
            <executions>
              <execution>
                <id>build-native</id>
                <goals>
                  <goal>build</goal>
                </goals>
                <phase>package</phase>
              </execution>
              <execution>
                <id>release-native</id>
                <goals>
                  <goal>release</goal>
                </goals>
                <phase>release</phase>
              </execution>
            </executions>
            <configuration>
              <mainClass>se.janderssonse.sariftool.cli.SarifToolCLI</mainClass>
              <classpath>
                <entry>target/${project.artifactId}-${project.version}-jar-with-dependencies.jar</entry>
              </classpath>
              <imageName>sariftool-${project.version}</imageName>
              <buildArgs>
                <buildArg>--allow-incomplete-classpath</buildArg>
                <buildArg>--no-fallback</buildArg>
                <buildArg>-H:+ReportExceptionStackTraces</buildArg>
                <buildArg>--verbose</buildArg>
              </buildArgs>
            </configuration>
          </plugin>
        </plugins>
      </build>
    </profile>

    <!-- Fat jar profile -->
    <profile>
      <id>fatjar</id>
      <activation>
        <property>
          <name>fatjar</name>
        </property>
      </activation>
      <build>
        <plugins>
          <plugin>
            <groupId>org.apache.maven.plugins</groupId>
            <artifactId>maven-assembly-plugin</artifactId>
            <version>3.4.2</version>
            <configuration>
              <descriptorRefs>
                <descriptorRef>jar-with-dependencies</descriptorRef>
              </descriptorRefs>
              <archive>
                <manifest>
                  <mainClass>se.janderssonse.sariftool.cli.SarifToolCLI</mainClass>
                </manifest>
              </archive>
              <finalName>${project.artifactId}-${project.version}</finalName>
            </configuration>
            <executions>
              <execution>
                <id>jar-with-dep</id>
                <phase>package</phase>
                <goals>
                  <goal>single</goal>
                </goals>
              </execution>
            </executions>
          </plugin>
          <plugin>
            <artifactId>maven-jar-plugin</artifactId>
            <version>3.2.2</version>
            <executions>
              <execution>
                <id>default-jar</id>
                <!-- put the default-jar in the none phase to skip it from being created -->
                <phase>none</phase>
              </execution>
            </executions>
          </plugin>
        </plugins>
      </build>
    </profile>

    <!-- Distribution profile -->
    <profile>
      <id>dist</id>
      <activation>
        <property>
          <name>dist</name>
        </property>
      </activation>
      <build>
        <plugins>
          <plugin>
            <groupId>org.apache.maven.plugins</groupId>
            <artifactId>maven-assembly-plugin</artifactId>
            <version>3.4.2</version>
            <configuration>
              <attach>false</attach>
              <appendAssemblyId>false</appendAssemblyId>
              <!-- <skipAssembly>false</skipAssembly> -->
              <finalName>${project.artifactId}-${project.version}-${os.detected.classifier}</finalName>
              <outputDirectory>${distribution.directory}</outputDirectory>
              <workDirectory>${project.build.directory}/assembly/work</workDirectory>
              <descriptors>
                <descriptor>src/assembly/assembly.xml</descriptor>
              </descriptors>
            </configuration>
            <executions>
              <execution>
                <id>make-distribution</id>
                <phase>package</phase>
                <goals>
                  <goal>single</goal>
                </goals>
              </execution>
            </executions>
          </plugin>

          <plugin>
            <artifactId>maven-jar-plugin</artifactId>
            <version>3.2.2</version>
            <executions>
              <execution>
                <id>default-jar</id>
                <!-- put the default-jar in the none phase to skip it from being created -->
                <phase>none</phase>
              </execution>
            </executions>
          </plugin>
        </plugins>
      </build>
    </profile>

    <profile>
      <id>dist-windows</id>
      <activation>
        <os>
          <family>windows</family>
        </os>
      </activation>
      <properties>
        <executable-suffix>.exe</executable-suffix>
      </properties>
    </profile>

    <!-- release profile -->
    <profile>
      <id>release</id>
      <build>
        <plugins>
          <plugin>
            <groupId>org.jreleaser</groupId>
            <artifactId>jreleaser-maven-plugin</artifactId>
            <configuration>
              <jreleaser>
                <project>
                  <snapshot>
                    <label>{{ projectVersionNumber }}-early-access</label>
                    <fullChangelog>true</fullChangelog>
                  </snapshot>
                  <tags>
                    <tag>cli</tag>
                    <tag>sarif</tag>
                  </tags>
                  <stereotype>CLI</stereotype>
                </project>
                <release>
                  <github>
                    <owner>janderssonse</owner>
                    <name>sariftool</name>
                    <overwrite>true</overwrite>
                    <changelog>
                      <formatted>ALWAYS</formatted>
                      <skipMergeCommits>true</skipMergeCommits>
                      <preset>conventional-commits</preset>
                    </changelog>
                  </github>
                </release>
                <distributions>
                  <sariftool>
                    <type>NATIVE_IMAGE</type>
                    <artifacts>
                      <artifact>
                        <path>{{distribution.directory}}/{{distributionName}}-{{projectVersion}}-linux-x86_64.tar.gz</path>
                        <platform>linux-x86_64</platform>
                      </artifact>
                      <artifact>
                        <path>{{distribution.directory}}/{{distributionName}}-{{projectVersion}}-windows-x86_64.zip</path>
                        <platform>windows-x86_64</platform>
                      </artifact>
                      <artifact>
                        <path>{{distribution.directory}}/{{distributionName}}-{{projectVersion}}-osx-x86_64.zip</path>
                        <platform>osx-x86_64</platform>
                      </artifact>
                    </artifacts>
                  </sariftool>
                </distributions>
                <platform>
                  <replacements>
                    <osx-x86_64>mac</osx-x86_64>
                    <aarch_64>aarch64</aarch_64>
                    <x86_64>amd64</x86_64>
                    <linux_musl>alpine</linux_musl>
                  </replacements>
                </platform>
              </jreleaser>
            </configuration>
          </plugin>
        </plugins>
      </build>
    </profile>
  </profiles>

</project>